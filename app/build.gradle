plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}
kapt {
    correctErrorTypes true
}


android {
    namespace 'com.example.teldamoviestask'
    compileSdk 34
    buildFeatures {
        viewBinding true
        dataBinding true
    }
    defaultConfig {
        applicationId "com.example.teldamoviestask"
        minSdk 27
        targetSdk 34
        versionCode 1
        versionName "1.0"
        buildConfigField "String", "API_KEY", "${API_KEY}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // Retrofit for network requests
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'


    // OkHttp for logging interceptors
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'

    // Moshi for JSON parsing
    implementation 'com.squareup.moshi:moshi-kotlin:1.12.0'

    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    // Coroutines for background operations
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'

    // Hilt for Dependency Injection
    implementation 'com.google.dagger:hilt-android:2.48'
    kapt 'com.google.dagger:hilt-compiler:2.48'

    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'

    // LifecycleScope for using coroutines with Lifecycle
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'

    // Hilt ViewModel Integration
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    // Hilt AndroidX compiler
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    // Kotlin Flow
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'

    implementation "androidx.activity:activity-ktx:1.2.0"
    implementation "androidx.fragment:fragment-ktx:1.3.0"

    def room_version = "2.6.1" // Use the latest version
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version" // For Java
    // For Kotlin use kapt instead of annotationProcessor
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // Unit testing dependencies
    testImplementation 'org.mockito:mockito-core:3.11.2'
    testImplementation 'org.mockito:mockito-inline:3.11.2'
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2"
    def lottieVersion = "6.0.0"
    implementation "com.airbnb.android:lottie:$lottieVersion"
}